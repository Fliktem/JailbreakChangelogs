<nav class="navbar navbar-expand-lg custom-navbar-color sticky-top">
  <div class="container-fluid">
    <!-- Navbar brand with logo -->
    <a class="navbar-brand d-flex align-items-center" href="/">
      <img class="navbar-logo" src="<%= logoUrl %>" alt="<%= logoAlt %>" />
    </a>

    <div class="d-flex d-lg-none align-items-center">
      <button
        id="mobileAvatarToggle"
        class="btn p-0"
        type="button"
        aria-controls="sideMenu"
        aria-expanded="false"
        aria-label="Toggle navigation"
      >
        <img
          src=""
          alt="Profile"
          class="rounded-circle"
          id="profile-picture-mobile"
          width="34"
          height="34"
        />
      </button>
    </div>

    <!-- Full-screen overlay menu for mobile -->
    <div id="sideMenu" class="side-menu d-lg-none">
      <div class="side-menu-content">
        <button
          id="sideMenuClose"
          class="btn position-absolute top-0 end-0 text-white"
          type="button"
          aria-label="Close menu"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 32 32"
          >
            <rect width="32" height="32" fill="none" />
            <path
              fill="currentColor"
              d="M16 2C8.2 2 2 8.2 2 16s6.2 14 14 14s14-6.2 14-14S23.8 2 16 2m0 26C9.4 28 4 22.6 4 16S9.4 4 16 4s12 5.4 12 12s-5.4 12-12 12"
            />
            <path
              fill="currentColor"
              d="M21.4 23L16 17.6L10.6 23L9 21.4l5.4-5.4L9 10.6L10.6 9l5.4 5.4L21.4 9l1.6 1.6l-5.4 5.4l5.4 5.4z"
            />
          </svg>
        </button>
        <!-- Login/Profile Section (Added to side menu) -->
        <div class="mobile-profile-section mb-3 mt-4" id="mobileProfileSection">
          <!-- This section will be populated by JavaScript -->
        </div>

        <div class="nav-separator"></div>

        <nav class="navbar-nav">
          <!-- Game Status & Updates -->
          <div class="nav-item">
            <a class="nav-link" href="/changelogs">Changelogs</a>
          </div>
          <div class="nav-item">
            <a class="nav-link" href="/seasons">Seasons</a>
          </div>

          <div class="nav-separator"></div>

          <!-- Core Trading Features -->
          <div class="nav-item">
            <a class="nav-link" href="/trading">Trading</a>
          </div>
          <div class="nav-item">
            <a class="nav-link" href="/values">Values</a>
          </div>
          <div class="nav-item">
            <a class="nav-link" href="/tradetracker">Trade Tracker</a>
          </div>

          <div class="nav-separator"></div>

          <!-- Community & Tools -->
          <div class="nav-item">
            <a class="nav-link" href="/users">Users</a>
          </div>
          <div class="nav-item">
            <a class="nav-link" href="/servers">Servers</a>
          </div>
          <div class="nav-item">
            <a class="nav-link" href="/bot">Our Discord Bot</a>
          </div>

          <div class="nav-separator"></div>

          <!-- Help -->
          <div class="nav-item">
            <a class="nav-link" href="/faq">FAQ</a>
          </div>
        </nav>
      </div>
    </div>

    <!-- Desktop menu (hidden on mobile) -->
    <div class="collapse navbar-collapse d-none d-lg-block" id="navbarNav">
      <ul class="navbar-nav ms-auto align-items-center">
        <!-- Game Status & Updates -->
        <li class="nav-item">
          <a class="nav-link" href="/changelogs">Changelogs</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/seasons">Seasons</a>
        </li>

        <!-- Core Trading Features -->
        <li class="nav-item">
          <a class="nav-link" href="/trading">Trading</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/values">Values</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/tradetracker">Trade Tracker</a>
        </li>

        <!-- Community & Tools -->
        <li class="nav-item">
          <a class="nav-link" href="/users">Users</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/servers">Servers</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="/bot">Discord Bot</a>
        </li>

        <!-- Help -->
        <li class="nav-item">
          <a class="nav-link" href="/faq">FAQ</a>
        </li>

        <!-- Profile picture icon with dropdown (visible on desktop) -->
        <li class="nav-item dropdown d-none d-lg-block ms-2">
          <a
            class="nav-link dropdown-toggle-no-caret"
            href="#"
            id="navbarDropdown"
            role="button"
            data-bs-toggle="dropdown"
            aria-expanded="false"
          >
            <img
              src=""
              alt="Profile"
              class="rounded-circle"
              id="profile-picture"
              width="32"
              height="32"
            />
          </a>
          <ul
            class="dropdown-menu dropdown-menu-dark dropdown-menu-end"
            aria-labelledby="navbarDropdown"
            id="userDropdown"
          >
            <!-- Dropdown items will be populated by JavaScript -->
          </ul>
        </li>
      </ul>
    </div>
  </div>
</nav>

<script>
  window.openSideMenu = function () {
    const sideMenu = document.getElementById("sideMenu");
    const mobileAvatarToggle = document.getElementById("mobileAvatarToggle");
    if (sideMenu && mobileAvatarToggle) {
      sideMenu.classList.add("active");
      mobileAvatarToggle.setAttribute("aria-expanded", "true");
    }
  };

  window.closeSideMenu = function () {
    const sideMenu = document.getElementById("sideMenu");
    const mobileAvatarToggle = document.getElementById("mobileAvatarToggle");
    if (sideMenu && mobileAvatarToggle) {
      sideMenu.classList.remove("active");
      mobileAvatarToggle.setAttribute("aria-expanded", "false");
    }
  };

  // Fix the sideMenuClose event listener
  const sideMenuClose = document.getElementById("sideMenuClose");
  if (sideMenuClose) {
    sideMenuClose.addEventListener("click", function () {
      window.closeSideMenu();
    });
  }

  document.addEventListener("DOMContentLoaded", function () {
    const sideMenu = document.getElementById("sideMenu");
    const sideMenuClose = document.getElementById("sideMenuClose");
    const userDropdown = document.getElementById("userDropdown");
    const profilePicture = document.getElementById("profile-picture");
    const mobileProfilePicture = document.getElementById(
      "profile-picture-mobile"
    );

    const mobileProfileSection = document.getElementById(
      "mobileProfileSection"
    );
    const mobileAvatarToggle = document.getElementById("mobileAvatarToggle");

    // Simply check if token cookie exists
    const isLoggedIn = !!Cookies.get("token");
    const avatarUrl = localStorage.getItem("avatar");

    async function setProfilePictureSrc(imgElement, src) {
      if (imgElement) {
        try {
          if (src) {
            imgElement.src = src;
          } else {
            const userData = JSON.parse(localStorage.getItem("user") || "{}");
            if (userData.id) {
              const avatarUrl = await window.checkAndSetAvatar(userData);
              imgElement.src = avatarUrl;
            } else {
              imgElement.src =
                "https://ui-avatars.com/api/?background=134d64&color=fff&size=128&rounded=true&name=Jailbreak+Break&bold=true&format=svg";
            }
          }
        } catch (error) {
          console.error("Error setting profile picture:", error);
          imgElement.src =
            "https://ui-avatars.com/api/?background=134d64&color=fff&size=128&rounded=true&name=Jailbreak+Break&bold=true&format=svg";
        }
      }
    }

    function getProfileContent(isLoggedIn) {
      if (isLoggedIn) {
        const userData = JSON.parse(localStorage.getItem("user") || "{}");
        const hasRoblox = userData.roblox_id != null;
        const userId = userData.id;

        return `
          <div class="profile-actions">
            <a class="nav-link" href="/users/${userId}">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
	<rect width="24" height="24" fill="none" />
	<path fill="currentColor" fill-rule="evenodd" d="M8 7a4 4 0 1 1 8 0a4 4 0 0 1-8 0m0 6a5 5 0 0 0-5 5a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3a5 5 0 0 0-5-5z" clip-rule="evenodd" />
</svg>
             Profile
            </a>
            ${
              !hasRoblox
                ? `
            <a class="nav-link" href="/roblox">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
	<rect width="24" height="24" fill="none" />
	<path fill="currentColor" d="M18.926 23.998L0 18.892L5.075.002L24 5.108ZM15.348 10.09l-5.282-1.453l-1.414 5.273l5.282 1.453z" />
</svg> Authenticate with Roblox
            </a>
            `
                : ""
            }
            <a class="nav-link text-danger" href="" onclick="logout()">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
	<rect width="24" height="24" fill="none" />
	<path fill="currentColor" d="m17 7l-1.41 1.41L18.17 11H8v2h10.17l-2.58 2.58L17 17l5-5M4 5h8V3H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h8v-2H4z" />
</svg>
              Log out
            </a>
          </div>
        `;
      } else {
        return `
          <a class="nav-link" href="/login">
           <svg xmlns="http://www.w3.org/2000/svg" width="20.59" height="16" viewBox="0 0 256 199">
	<rect width="256" height="199" fill="none" />
	<path fill="#5865f2" d="M216.856 16.597A208.5 208.5 0 0 0 164.042 0c-2.275 4.113-4.933 9.645-6.766 14.046q-29.538-4.442-58.533 0c-1.832-4.4-4.55-9.933-6.846-14.046a207.8 207.8 0 0 0-52.855 16.638C5.618 67.147-3.443 116.4 1.087 164.956c22.169 16.555 43.653 26.612 64.775 33.193A161 161 0 0 0 79.735 175.3a136.4 136.4 0 0 1-21.846-10.632a109 109 0 0 0 5.356-4.237c42.122 19.702 87.89 19.702 129.51 0a132 132 0 0 0 5.355 4.237a136 136 0 0 1-21.886 10.653c4.006 8.02 8.638 15.67 13.873 22.848c21.142-6.58 42.646-16.637 64.815-33.213c5.316-56.288-9.08-105.09-38.056-148.36M85.474 135.095c-12.645 0-23.015-11.805-23.015-26.18s10.149-26.2 23.015-26.2s23.236 11.804 23.015 26.2c.02 14.375-10.148 26.18-23.015 26.18m85.051 0c-12.645 0-23.014-11.805-23.014-26.18s10.148-26.2 23.014-26.2c12.867 0 23.236 11.804 23.015 26.2c0 14.375-10.148 26.18-23.015 26.18" />
</svg></i> Authenticate with Discord
          </a>
        `;
      }
    }

    function getDropdownContent(isLoggedIn) {
      if (isLoggedIn) {
        const userData = JSON.parse(localStorage.getItem("user") || "{}");
        const hasRoblox = userData.roblox_id != null;
        const userId = userData.id;

        return `
          <li>
            <a class="dropdown-item" href="/users/${userId}">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
	<rect width="24" height="24" fill="none" />
	<path fill="currentColor" fill-rule="evenodd" d="M8 7a4 4 0 1 1 8 0a4 4 0 0 1-8 0m0 6a5 5 0 0 0-5 5a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3a5 5 0 0 0-5-5z" clip-rule="evenodd" />
</svg>
               Profile
            </a>
          </li>
          ${
            !hasRoblox
              ? `
          <li>
            <a class="dropdown-item" href="/roblox">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
	<rect width="24" height="24" fill="none" />
	<path fill="currentColor" d="M18.926 23.998L0 18.892L5.075.002L24 5.108ZM15.348 10.09l-5.282-1.453l-1.414 5.273l5.282 1.453z" />
</svg> Authenticate with Roblox
            </a>
          </li>`
              : ""
          }
          <li><hr class="dropdown-divider"></li>
          <li>
            <a class="dropdown-item text-danger" href="" onclick="logout()">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
	<rect width="24" height="24" fill="none" />
	<path fill="currentColor" d="m17 7l-1.41 1.41L18.17 11H8v2h10.17l-2.58 2.58L17 17l5-5M4 5h8V3H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h8v-2H4z" />
</svg>
             Log out
            </a>
          </li>
        `;
      } else {
        return `
          <li>
            <a class="dropdown-item" href="/login">
              <svg xmlns="http://www.w3.org/2000/svg" width="20.59" height="16" viewBox="0 0 256 199">
	<rect width="256" height="199" fill="none" />
	<path fill="#5865f2" d="M216.856 16.597A208.5 208.5 0 0 0 164.042 0c-2.275 4.113-4.933 9.645-6.766 14.046q-29.538-4.442-58.533 0c-1.832-4.4-4.55-9.933-6.846-14.046a207.8 207.8 0 0 0-52.855 16.638C5.618 67.147-3.443 116.4 1.087 164.956c22.169 16.555 43.653 26.612 64.775 33.193A161 161 0 0 0 79.735 175.3a136.4 136.4 0 0 1-21.846-10.632a109 109 0 0 0 5.356-4.237c42.122 19.702 87.89 19.702 129.51 0a132 132 0 0 0 5.355 4.237a136 136 0 0 1-21.886 10.653c4.006 8.02 8.638 15.67 13.873 22.848c21.142-6.58 42.646-16.637 64.815-33.213c5.316-56.288-9.08-105.09-38.056-148.36M85.474 135.095c-12.645 0-23.015-11.805-23.015-26.18s10.149-26.2 23.015-26.2s23.236 11.804 23.015 26.2c.02 14.375-10.148 26.18-23.015 26.18m85.051 0c-12.645 0-23.014-11.805-23.014-26.18s10.148-26.2 23.014-26.2c12.867 0 23.236 11.804 23.015 26.2c0 14.375-10.148 26.18-23.015 26.18" />
</svg></i> Authenticate with Discord
            </a>
          </li>
        `;
      }
    }

    function updateContent() {
      if (isLoggedIn) {
        const userData = JSON.parse(localStorage.getItem("user") || "{}");
        if (!userData.id) {
          setTimeout(updateContent, 100);
          return;
        }
      }

      const dropdownContent = getDropdownContent(isLoggedIn);
      const profileContent = getProfileContent(isLoggedIn);

      if (userDropdown) userDropdown.innerHTML = dropdownContent;
      if (mobileProfileSection) mobileProfileSection.innerHTML = profileContent;

      setProfilePictureSrc(profilePicture, avatarUrl);
      setProfilePictureSrc(mobileProfilePicture, avatarUrl);
    }

    // Toggle side menu with mobile avatar
    mobileAvatarToggle.addEventListener("click", function () {
      const isExpanded = this.getAttribute("aria-expanded") === "true";
      this.setAttribute("aria-expanded", !isExpanded);
      sideMenu.classList.toggle("active");
    });

    window.logout = function () {
      Cookies.remove("token");
      updateContent();
      window.location.reload();
    };

    updateContent();
  });
  if (sideMenuClose) {
    sideMenuClose.addEventListener("click", function () {
      sideMenu.classList.remove("active");
      mobileAvatarToggle.setAttribute("aria-expanded", "false");
    });
  }
</script>

<style>
  /* Add these styles to your CSS */
  .dropdown-toggle-no-caret::after {
    display: none !important;
  }

  .mobile-profile-section {
    padding: 0 1rem; /* Change padding to only left and right */
    margin-top: 4rem; /* Space for close button */
  }

  #sideMenuClose {
    position: absolute;
    top: 0;
    right: 0;
    z-index: 1030;
  }

  .side-menu-content .nav-link {
    padding: 0.5rem 0;
    color: white;
  }

  .mobile-profile-section .nav-link {
    color: white;
    display: block;
    padding: 0.5rem 0;
  }

  .profile-actions {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  .side-menu-content .nav-item {
    padding: 0 1rem;
  }
  .nav-separator {
    margin: 0.5rem 0;
  }
</style>
