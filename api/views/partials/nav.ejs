<nav class="navbar navbar-expand-lg custom-navbar-color sticky-top">
  <div
    class="container-fluid d-flex justify-content-between align-items-center"
  >
    <!-- Left side - Logo -->
    <div class="navbar-brand-container">
      <a class="navbar-brand" href="/">
        <img
          class="navbar-logo"
          src="<%= ['/values', '/trading', '/values/calculator'].includes(locals.req?.path) || locals.req?.path?.startsWith('/trading/ad') ? '/assets/logos/JB Changelogs (Collab).webp' : '/assets/logos/JB Changelogs Banner.webp' %>"
          alt="<%= logoAlt %>"
        />
      </a>
    </div>

    <!-- Right side - Navigation and Profile -->
    <div class="navbar-content-right">
      <!-- Mobile avatar toggle -->
      <div class="d-flex d-lg-none align-items-center">
        <button
          id="mobileAvatarToggle"
          class="btn p-0"
          type="button"
          aria-controls="sideMenu"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <img
            src=""
            alt="Profile"
            class="rounded-circle"
            id="profile-picture-mobile"
            width="34"
            height="34"
          />
        </button>
      </div>

      <!-- Desktop menu -->
      <div class="navbar-desktop-menu d-none d-lg-flex">
        <ul class="navbar-nav align-items-center">
          <!-- Game Status & Updates -->
          <li class="nav-item">
            <a class="nav-link" href="/changelogs">Changelogs</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/seasons">Seasons</a>
          </li>

          <!-- Core Trading Features -->
          <li class="nav-item">
            <a class="nav-link" href="/trading">Trading</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/values">Values</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/tradetracker">Trade Tracker</a>
          </li>

          <!-- Community & Tools -->
          <li class="nav-item">
            <a class="nav-link" href="/users">Users</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/servers">Servers</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/bot">Discord Bot</a>
          </li>

          <!-- Help -->
          <li class="nav-item">
            <a class="nav-link" href="/faq">FAQ</a>
          </li>

          <!-- Profile picture icon with dropdown (visible on desktop) -->
          <li class="nav-item dropdown ms-2">
            <a
              class="nav-link dropdown-toggle-no-caret"
              href="#"
              id="navbarDropdown"
              role="button"
              data-bs-toggle="dropdown"
              aria-expanded="false"
            >
              <img
                src=""
                alt="Profile"
                class="rounded-circle"
                id="profile-picture"
                width="32"
                height="32"
              />
            </a>
            <ul
              class="dropdown-menu dropdown-menu-dark dropdown-menu-end"
              aria-labelledby="navbarDropdown"
              id="userDropdown"
            >
              <!-- Dropdown items will be populated by JavaScript -->
            </ul>
          </li>
        </ul>
      </div>
    </div>

    <!-- Full-screen overlay menu for mobile -->
    <div id="sideMenuBackdrop" class="side-menu-backdrop"></div>
    <div id="sideMenu" class="side-menu d-lg-none">
      <div class="side-menu-content">
        <!-- Header with close button -->
        <div class="side-menu-header">
          <div class="side-menu-brand">
            <img
              class="navbar-logo-small"
              src="<%= logoUrl %>"
              alt="<%= logoAlt %>"
            />
          </div>
          <button
            id="sideMenuClose"
            class="side-menu-close"
            aria-label="Close menu"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="32"
              height="32"
              viewBox="0 0 24 24"
            >
              <rect width="24" height="24" fill="none" />
              <path
                fill="none"
                stroke="currentColor"
                stroke-dasharray="12"
                stroke-dashoffset="12"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M12 12l7 7M12 12l-7 -7M12 12l-7 7M12 12l7 -7"
              >
                <animate
                  fill="freeze"
                  attributeName="stroke-dashoffset"
                  dur="0.3s"
                  values="12;0"
                />
              </path>
            </svg>
          </button>
        </div>

        <!-- Profile Section -->
        <div class="mobile-profile-section" id="mobileProfileSection">
          <!-- This section will be populated by JavaScript -->
        </div>

        <!-- Navigation Menu -->
        <nav class="side-menu-nav">
          <div class="side-menu-section">
            <div class="side-menu-section-title">Game & Updates</div>
            <a class="side-menu-item" href="/changelogs">Changelogs</a>
            <a class="side-menu-item" href="/seasons">Seasons</a>
          </div>

          <div class="side-menu-section">
            <div class="side-menu-section-title">Trading</div>
            <a class="side-menu-item" href="/trading">Trading</a>
            <a class="side-menu-item" href="/values">Values</a>
            <a class="side-menu-item" href="/tradetracker">Trade Tracker</a>
          </div>

          <div class="side-menu-section">
            <div class="side-menu-section-title">Community</div>
            <a class="side-menu-item" href="/users">Users</a>
            <a class="side-menu-item" href="/servers">Servers</a>
            <a class="side-menu-item" href="/bot">Discord Bot</a>
          </div>

          <div class="side-menu-section">
            <div class="side-menu-section-title">Help</div>
            <a class="side-menu-item" href="/faq">FAQ</a>
          </div>
        </nav>
      </div>
    </div>
  </div>
</nav>

<script>
  window.openSideMenu = function () {
    const sideMenu = document.getElementById("sideMenu");
    const backdrop = document.getElementById("sideMenuBackdrop");
    const mobileAvatarToggle = document.getElementById("mobileAvatarToggle");
    if (sideMenu && mobileAvatarToggle) {
      document.body.classList.add("menu-open");
      sideMenu.classList.add("active");
      backdrop.classList.add("active");
      mobileAvatarToggle.setAttribute("aria-expanded", "true");

      // Store current scroll position
      window.menuScrollPos = window.scrollY;
    }
  };

  window.closeSideMenu = function () {
    const sideMenu = document.getElementById("sideMenu");
    const backdrop = document.getElementById("sideMenuBackdrop");
    const mobileAvatarToggle = document.getElementById("mobileAvatarToggle");
    if (sideMenu && mobileAvatarToggle) {
      document.body.classList.remove("menu-open");
      sideMenu.classList.remove("active");
      backdrop.classList.remove("active");
      mobileAvatarToggle.setAttribute("aria-expanded", "false");

      // Restore scroll position
      window.scrollTo(0, window.menuScrollPos || 0);
    }
  };

  // Fix the sideMenuClose event listener
  const sideMenuClose = document.getElementById("sideMenuClose");
  if (sideMenuClose) {
    sideMenuClose.addEventListener("click", function () {
      window.closeSideMenu();
    });
  }

  document.addEventListener("DOMContentLoaded", function () {
    const sideMenu = document.getElementById("sideMenu");
    const sideMenuClose = document.getElementById("sideMenuClose");
    const userDropdown = document.getElementById("userDropdown");
    const profilePicture = document.getElementById("profile-picture");
    const mobileProfilePicture = document.getElementById(
      "profile-picture-mobile"
    );

    const mobileProfileSection = document.getElementById(
      "mobileProfileSection"
    );
    const mobileAvatarToggle = document.getElementById("mobileAvatarToggle");
    const sideMenuBackdrop = document.getElementById("sideMenuBackdrop");

    // Simply check if token cookie exists
    const isLoggedIn = !!Cookies.get("token");
    const avatarUrl = localStorage.getItem("avatar");

    async function setProfilePictureSrc(imgElement, src) {
      if (imgElement) {
        try {
          if (src) {
            imgElement.src = src;
          } else {
            const userData = JSON.parse(localStorage.getItem("user") || "{}");
            if (userData.id) {
              const avatarUrl = await window.checkAndSetAvatar(userData);
              imgElement.src = avatarUrl;
            } else {
              imgElement.outerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32">
	<rect width="32" height="32" fill="none" />
	<path fill="none" d="M8.007 24.93A4.996 4.996 0 0 1 13 20h6a4.996 4.996 0 0 1 4.993 4.93a11.94 11.94 0 0 1-15.986 0M20.5 12.5A4.5 4.5 0 1 1 16 8a4.5 4.5 0 0 1 4.5 4.5" />
	<path fill="currentColor" d="M26.749 24.93A13.99 13.99 0 1 0 2 16a13.9 13.9 0 0 0 3.251 8.93l-.02.017c.07.084.15.156.222.239c.09.103.187.2.28.3q.418.457.87.87q.14.124.28.242q.48.415.99.782c.044.03.084.069.128.1v-.012a13.9 13.9 0 0 0 16 0v.012c.044-.031.083-.07.128-.1q.51-.368.99-.782q.14-.119.28-.242q.451-.413.87-.87c.093-.1.189-.197.28-.3c.071-.083.152-.155.222-.24ZM16 8a4.5 4.5 0 1 1-4.5 4.5A4.5 4.5 0 0 1 16 8M8.007 24.93A4.996 4.996 0 0 1 13 20h6a4.996 4.996 0 0 1 4.993 4.93a11.94 11.94 0 0 1-15.986 0" />
</svg>`;
            }
          }
        } catch (error) {
          console.error("Error setting profile picture:", error);
          imgElement.src = `<svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32">
	<rect width="32" height="32" fill="none" />
	<path fill="none" d="M8.007 24.93A4.996 4.996 0 0 1 13 20h6a4.996 4.996 0 0 1 4.993 4.93a11.94 11.94 0 0 1-15.986 0M20.5 12.5A4.5 4.5 0 1 1 16 8a4.5 4.5 0 0 1 4.5 4.5" />
	<path fill="currentColor" d="M26.749 24.93A13.99 13.99 0 1 0 2 16a13.9 13.9 0 0 0 3.251 8.93l-.02.017c.07.084.15.156.222.239c.09.103.187.2.28.3q.418.457.87.87q.14.124.28.242q.48.415.99.782c.044.03.084.069.128.1v-.012a13.9 13.9 0 0 0 16 0v.012c.044-.031.083-.07.128-.1q.51-.368.99-.782q.14-.119.28-.242q.451-.413.87-.87c.093-.1.189-.197.28-.3c.071-.083.152-.155.222-.24ZM16 8a4.5 4.5 0 1 1-4.5 4.5A4.5 4.5 0 0 1 16 8M8.007 24.93A4.996 4.996 0 0 1 13 20h6a4.996 4.996 0 0 1 4.993 4.93a11.94 11.94 0 0 1-15.986 0" />
</svg>`;
        }
      }
    }

    function getProfileContent(isLoggedIn) {
      if (isLoggedIn) {
        const userData = JSON.parse(localStorage.getItem("user") || "{}");
        const hasRoblox = userData.roblox_id != null;
        const userId = userData.id;

        return `
          <div class="profile-actions">
            <a class="nav-link" href="/users/${userId}">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
	<rect width="24" height="24" fill="none" />
	<path fill="currentColor" fill-rule="evenodd" d="M8 7a4 4 0 1 1 8 0a4 4 0 0 1-8 0m0 6a5 5 0 0 0-5 5a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3a5 5 0 0 0-5-5z" clip-rule="evenodd" />
</svg>
             Profile
            </a>
            ${
              !hasRoblox
                ? `
            <a class="nav-link" href="/roblox">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
	<rect width="24" height="24" fill="none" />
	<path fill="currentColor" d="M18.926 23.998L0 18.892L5.075.002L24 5.108ZM15.348 10.09l-5.282-1.453l-1.414 5.273l5.282 1.453z" />
</svg> Authenticate with Roblox
            </a>
            `
                : ""
            }
            <a class="nav-link text-danger" href="" onclick="logout()">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
	<rect width="24" height="24" fill="none" />
	<path fill="currentColor" d="m17 7l-1.41 1.41L18.17 11H8v2h10.17l-2.58 2.58L17 17l5-5M4 5h8V3H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h8v-2H4z" />
</svg>
              Log out
            </a>
          </div>
        `;
      } else {
        return `
          <a class="nav-link" href="/login?redirect=${encodeURIComponent(
            window.location.pathname + window.location.search
          )}">
           <svg xmlns="http://www.w3.org/2000/svg" width="20.59" height="16" viewBox="0 0 256 199">
	<rect width="256" height="199" fill="none" />
	<path fill="#5865f2" d="M216.856 16.597A208.5 208.5 0 0 0 164.042 0c-2.275 4.113-4.933 9.645-6.766 14.046q-29.538-4.442-58.533 0c-1.832-4.4-4.55-9.933-6.846-14.046a207.8 207.8 0 0 0-52.855 16.638C5.618 67.147-3.443 116.4 1.087 164.956c22.169 16.555 43.653 26.612 64.775 33.193A161 161 0 0 0 79.735 175.3a136.4 136.4 0 0 1-21.846-10.632a109 109 0 0 0 5.356-4.237c42.122 19.702 87.89 19.702 129.51 0a132 132 0 0 0 5.355 4.237a136 136 0 0 1-21.886 10.653c4.006 8.02 8.638 15.67 13.873 22.848c21.142-6.58 42.646-16.637 64.815-33.213c5.316-56.288-9.08-105.09-38.056-148.36M85.474 135.095c-12.645 0-23.015-11.805-23.015-26.18s10.149-26.2 23.015-26.2s23.236 11.804 23.015 26.2c.02 14.375-10.148 26.18-23.015 26.18m85.051 0c-12.645 0-23.014-11.805-23.014-26.18s10.148-26.2 23.014-26.2c12.867 0 23.236 11.804 23.015 26.2c0 14.375-10.148 26.18-23.015 26.18" />
</svg></i> Authenticate with Discord
          </a>
        `;
      }
    }

    function getDropdownContent(isLoggedIn) {
      if (isLoggedIn) {
        const userData = JSON.parse(localStorage.getItem("user") || "{}");
        const hasRoblox = userData.roblox_id != null;
        const userId = userData.id;

        return `
          <li>
            <a class="dropdown-item" href="/users/${userId}">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
	<rect width="24" height="24" fill="none" />
	<path fill="currentColor" fill-rule="evenodd" d="M8 7a4 4 0 1 1 8 0a4 4 0 0 1-8 0m0 6a5 5 0 0 0-5 5a3 3 0 0 0 3 3h12a3 3 0 0 0 3-3a5 5 0 0 0-5-5z" clip-rule="evenodd" />
</svg>
               Profile
            </a>
          </li>
          ${
            !hasRoblox
              ? `
          <li>
            <a class="dropdown-item" href="/roblox">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
	<rect width="24" height="24" fill="none" />
	<path fill="currentColor" d="M18.926 23.998L0 18.892L5.075.002L24 5.108ZM15.348 10.09l-5.282-1.453l-1.414 5.273l5.282 1.453z" />
</svg> Authenticate with Roblox
            </a>
          </li>`
              : ""
          }
          <li><hr class="dropdown-divider"></li>
          <li>
            <a class="dropdown-item text-danger" href="" onclick="logout()">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
	<rect width="24" height="24" fill="none" />
	<path fill="currentColor" d="m17 7l-1.41 1.41L18.17 11H8v2h10.17l-2.58 2.58L17 17l5-5M4 5h8V3H4c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h8v-2H4z" />
</svg>
             Log out
            </a>
          </li>
        `;
      } else {
        return `
          <li>
            <a class="dropdown-item" href="/login?redirect=${encodeURIComponent(
              window.location.pathname + window.location.search
            )}">
              <svg xmlns="http://www.w3.org/2000/svg" width="20.59" height="16" viewBox="0 0 256 199">
	<rect width="256" height="199" fill="none" />
	<path fill="#5865f2" d="M216.856 16.597A208.5 208.5 0 0 0 164.042 0c-2.275 4.113-4.933 9.645-6.766 14.046q-29.538-4.442-58.533 0c-1.832-4.4-4.55-9.933-6.846-14.046a207.8 207.8 0 0 0-52.855 16.638C5.618 67.147-3.443 116.4 1.087 164.956c22.169 16.555 43.653 26.612 64.775 33.193A161 161 0 0 0 79.735 175.3a136.4 136.4 0 0 1-21.846-10.632a109 109 0 0 0 5.356-4.237c42.122 19.702 87.89 19.702 129.51 0a132 132 0 0 0 5.355 4.237a136 136 0 0 1-21.886 10.653c4.006 8.02 8.638 15.67 13.873 22.848c21.142-6.58 42.646-16.637 64.815-33.213c5.316-56.288-9.08-105.09-38.056-148.36M85.474 135.095c-12.645 0-23.015-11.805-23.015-26.18s10.149-26.2 23.015-26.2s23.236 11.804 23.015 26.2c.02 14.375-10.148 26.18-23.015 26.18m85.051 0c-12.645 0-23.014-11.805-23.014-26.18s10.148-26.2 23.014-26.2c12.867 0 23.236 11.804 23.015 26.2c0 14.375-10.148 26.18-23.015 26.18" />
</svg></i> Authenticate with Discord
            </a>
          </li>
        `;
      }
    }

    function updateContent() {
      if (isLoggedIn) {
        const userData = JSON.parse(localStorage.getItem("user") || "{}");
        if (!userData.id) {
          setTimeout(updateContent, 100);
          return;
        }
      }

      const dropdownContent = getDropdownContent(isLoggedIn);
      const profileContent = getProfileContent(isLoggedIn);

      if (userDropdown) userDropdown.innerHTML = dropdownContent;
      if (mobileProfileSection) mobileProfileSection.innerHTML = profileContent;

      setProfilePictureSrc(profilePicture, avatarUrl);
      setProfilePictureSrc(mobileProfilePicture, avatarUrl);
    }

    // Toggle side menu with mobile avatar
    mobileAvatarToggle.addEventListener("click", function () {
      const isExpanded = this.getAttribute("aria-expanded") === "true";
      this.setAttribute("aria-expanded", !isExpanded);
      sideMenu.classList.toggle("active");
    });

    window.logout = function () {
      // Remove auth-related data from localStorage
      localStorage.removeItem("user");
      localStorage.removeItem("avatar");
      localStorage.removeItem("userid");

      // Remove token cookie
      Cookies.remove("token", {
        path: "/",
        secure: true,
        sameSite: "Strict",
      });

      // Update UI
      updateContent();

      // Redirect to home page
      window.location.href = "/";
    };

    updateContent();

    // Close menu when clicking backdrop
    if (sideMenuBackdrop) {
      sideMenuBackdrop.addEventListener("click", function () {
        window.closeSideMenu();
      });
    }
  });
  if (sideMenuClose) {
    sideMenuClose.addEventListener("click", function () {
      sideMenu.classList.remove("active");
      mobileAvatarToggle.setAttribute("aria-expanded", "false");
    });
  }

  // Add event listener to prevent scroll propagation
  document.addEventListener("DOMContentLoaded", function () {
    const sideMenu = document.getElementById("sideMenu");
    if (sideMenu) {
      sideMenu.addEventListener(
        "wheel",
        function (e) {
          e.stopPropagation();
        },
        { passive: true }
      );

      sideMenu.addEventListener(
        "touchmove",
        function (e) {
          e.stopPropagation();
        },
        { passive: true }
      );
    }
  });
</script>

<style>
  /* Add these styles to your CSS */
  .dropdown-toggle-no-caret::after {
    display: none !important;
  }

  .mobile-profile-section {
    margin-top: 1rem; /* Space for close button */
  }

  #sideMenuClose {
    position: absolute;
    top: 0;
    right: 0;
    z-index: 1030;
  }

  .side-menu-content .nav-link {
    padding: 0.5rem 0;
    color: white;
  }

  .mobile-profile-section .nav-link {
    color: white;
    display: block;
    padding: 0.5rem 0;
  }

  .profile-actions {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  .side-menu-content .nav-item {
    padding: 0 1rem;
  }
  .nav-separator {
    margin: 0.5rem 0;
  }

  /* Navbar structure */
  .custom-navbar-color .container-fluid {
    display: flex;
    justify-content: space-between;
    align-items: center;
    max-width: 1920px;
    padding: 0 24px;
    height: 100%;
  }

  /* Logo section */
  .navbar-brand-wrapper {
    flex: 0 0 auto;
    margin-right: 20px;
  }

  .navbar-brand {
    padding: 0;
    margin: 0;
    display: flex;
    align-items: center;
  }

  /* Desktop menu section */
  .navbar-desktop-menu {
    flex: 0 0 auto;
    margin-left: auto;
  }

  .navbar-desktop-menu .navbar-nav {
    display: flex;
    align-items: center;
    gap: 0.5rem; /* Reduced from 1rem to 0.5rem */
  }

  /* Ensure nav items don't wrap */
  .navbar-desktop-menu .nav-item {
    white-space: nowrap;
  }

  /* Keep existing styles */
  /* ...existing styles... */

  /* Updated navbar styles */
  .navbar {
    position: sticky;
    top: 0;
    z-index: 1000;
    width: 100%;
  }

  .container-fluid {
    width: 100%;
    max-width: none;
    padding: 0 24px;
    margin: 0;
  }

  /* Left side - Logo */
  .navbar-brand-container {
    position: absolute;
    left: 24px;
    display: flex;
    align-items: center;
  }

  /* Right side - Navigation and Profile */
  .navbar-content-right {
    position: absolute;
    right: 24px;
    display: flex;
    align-items: center;
  }

  .navbar-desktop-menu .navbar-nav {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  /* Ensure everything stays in place when zooming */
  @media screen and (min-width: 992px) {
    .navbar-content-right {
      display: flex !important;
    }

    .navbar-desktop-menu {
      display: flex !important;
    }
  }

  /* Profile dropdown positioning */
  .nav-item.dropdown.ms-2 {
    margin-left: 0.75rem !important; /* Reduced from default 2rem */
    margin-right: -0.5rem; /* Push slightly closer to edge */
  }

  /* Nav link padding adjustment */
  .custom-navbar-color .nav-link {
    padding: 4px 6px; /* Reduced horizontal padding from 8px to 6px */
  }
</style>
